<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Spring MVC Project 에서 50여가지의 
	Annotation을 사용할 수 있도록 해주는 설정 -->
	<annotation-driven />

	<!-- 캐싱을 적용할 정적 디렉토리 경로 설정 -->
	<resources mapping="/resources/**" 
		location="/resources/" />

	<!-- Controller에서 view 이름을 리턴하면 
	실제 출력할 JSP 파일을 결정하는 ViewResolver 설정 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- Controller에서 리턴한 view 이름과 일치하는 
	bean이 있으면 그 bean으로 출력하도록 해주는 설정 -->
	<beans:bean
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
	
	<!-- download라는 view 이름이 온 경우 출력할 뷰를 설정 -->
	<beans:bean id="download"
	class="kakao.itstudy.item.service.DownloadView"/>
	
	<!-- excel이라는 view 이름이 온 경우 출력할 뷰를 결정 -->
	<beans:bean id="excel"
	class="kakao.itstudy.item.service.ExcelView"/>
	
	<!-- pdf라는 view 이름이 온 경우 출력할 뷰를 결정 -->
	<beans:bean id="pdf"
	class="kakao.itstudy.item.service.PdfView"/>
	
	<!-- json이라는 view 이름이 온 경우 출력할 뷰를 결정 -->
	<beans:bean id="json"
	class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	
	<!-- annotation이 붙은 클래스의 bean을 자동 생성하는
	패키지를 지정 -->
	<context:component-scan
		base-package="kakao.itstudy.item" />

	<!-- Controller가 처리하지 못하는 요청은 WAS가 처리하도록 해주는 설정 -->
	<default-servlet-handler />

	<!-- hibernate 트랜잭션 사용 bean -->
	<tx:annotation-driven />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="sessionFactory" />
	</beans:bean>


</beans:beans>
